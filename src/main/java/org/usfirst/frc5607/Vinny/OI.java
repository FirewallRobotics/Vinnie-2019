// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5607.Vinny;

//import org.usfirst.frc5607.Vinny.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.buttons.JoystickButton;

import org.usfirst.frc5607.Vinny.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public XboxController xboxController1;
    public XboxController xboxController2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        xboxController1 = new XboxController(0);
        xboxController2 = new XboxController(1);
         
    }

    //First Controller
    public XboxController getXboxController1() {
        return xboxController1;
    }
    public XboxController gXboxController2(){
        return xboxController2;
    }
    public Boolean getServoIn(){
        return xboxController1.getAButton();
    }
    public Boolean getServoOut(){
        return xboxController1.getBButton();
    }
    public Boolean getBasketDump(){
        return xboxController1.getYButton();
    }
    public Boolean getBasketRaise(){
        return xboxController1.getXButton();
    }
    public Boolean getFrontArmRaise(){
        return xboxController1.getBackButton();
    }
    public Boolean getFrontArmLower(){
        return xboxController1.getStartButton();
    }
    public Boolean getFrontArmSpin(){
        return xboxController1.getBumper(GenericHID.Hand.kLeft);
    }

    //Second Controller
    public Double getJoySpeed(){
        return xboxController2.getY(GenericHID.Hand.kLeft);
    }
    public Boolean getLowerHatch(){
        return xboxController2.getBumper(GenericHID.Hand.kLeft);
    }
    public Boolean getHighHatch(){
        return xboxController2.getBumper(GenericHID.Hand.kRight);
    }
    public Boolean getCSCargoDeploy(){
        return xboxController2.getAButton();
    }
    public Boolean getRSLowerCargo(){
        return xboxController2.getBButton();
    }
    public Boolean getRSHigherCargo(){
        return xboxController2.getYButton();
    }
    
    
    
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

